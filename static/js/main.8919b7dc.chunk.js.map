{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["Card","isDisplay","setIsDisplay","className","onClick","PopUp","App","useState","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8MAGA,SAASA,EAAT,GAA4C,IAA5BC,EAA2B,EAA3BA,UAAWC,EAAgB,EAAhBA,aACzB,OACE,qBAAKC,UAAU,OAAf,SACE,wBAAQC,QAAS,kBAAMF,GAAcD,IAAYE,UAAU,MAA3D,4BAON,SAASE,EAAT,GAA+B,IACzBF,EAMJ,OAJEA,EAH0B,EAAbF,UAGD,OAEA,SAGZ,qBAAKE,UAAS,iBAAYA,GAA1B,8iBAkBWG,MAVf,WAAgB,IAAD,EACqBC,oBAAS,GAD9B,mBACNN,EADM,KACKC,EADL,KAEb,OACE,sBAAKC,UAAU,MAAf,UACE,cAACH,EAAD,CAAMC,UAAWA,EAAWC,aAAcA,IAC1C,cAACG,EAAD,CAAOJ,UAAWA,QCtBTO,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.8919b7dc.chunk.js","sourcesContent":["import { useState } from \"react\";\nimport \"./App.css\";\n\nfunction Card({ isDisplay, setIsDisplay }) {\n  return (\n    <div className=\"card\">\n      <button onClick={() => setIsDisplay(!isDisplay)} className=\"btn\">\n        點我\n      </button>\n    </div>\n  );\n}\n\nfunction PopUp({ isDisplay }) {\n  let className;\n  if (isDisplay) {\n    className = \"show\";\n  } else {\n    className = \"hidden\";\n  }\n  return (\n    <div className={`pop-up ${className}`}>\n      測試用測試用測試用測試用測試用測試用 測試用測試用測試用測試用測試用測試用\n      測試用測試用測試用測試用測試用測試用 測試用測試用測試用測試用測試用測試用\n      測試用測試用測試用測試用測試用測試用\n    </div>\n  );\n}\n\nfunction App() {\n  const [isDisplay, setIsDisplay] = useState(false);\n  return (\n    <div className=\"App\">\n      <Card isDisplay={isDisplay} setIsDisplay={setIsDisplay} />\n      <PopUp isDisplay={isDisplay} />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}